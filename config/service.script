#!/bin/bash
#
# {{release_name}}
#
# chkconfig: 345 80 30
# description: {{release_description}}
# processname: beam
# config: /opt/{{release_name}}/config/sys.config
# config: /opt/{{release_name}}/config/vm.args
#

# Source function library.
. /etc/init.d/functions

RETVAL=0
PATH=/sbin:/usr/sbin:/bin:/usr/bin
NAME={{release_name}}
DAEMON=/opt/$NAME/bin/$NAME
LOCKFILE=/var/lock/subsys/$NAME
PIDFILE=/var/run/$NAME/$NAME.pid
USER=$NAME

# Check for script, config and data dirs
if ! [ -x $DAEMON ]; then
    echo "$DAEMON not found"
    exit 0
fi
if ! [ -f /opt/$NAME/config/sys.config ]; then
    echo "/opt/$NAME/config/sys.config not found"
    exit 0
fi
if ! [ -f /opt/$NAME/config/vm.args ]; then
    echo "/opt/$NAME/config/vm.args not found"
    exit 0
fi
if ! [ -d /var/opt/$NAME ]; then
    echo "/var/opt/$NAME not found"
    exit 0
fi

start() {
    STATUS=$(status -p $PIDFILE $NAME)
    RETVAL=$?
    if [ $RETVAL -eq 0 ]; then
        echo $STATUS
    else
        echo -n "Starting $NAME: "
        daemon --user $USER $DAEMON start &> /dev/null && success || failure
        RETVAL=$?
        if [ $RETVAL -eq 0 ]; then
            touch $LOCKFILE
            for n in $(seq 1 10); do
                sleep 1
                PID=$(su --session-command="$DAEMON pid" $NAME)
                if [[ $PID =~ ^[0-9]+* ]]; then
                    echo $PID > $PIDFILE
                    break
                fi
                echo -n "."
            done
        fi
        echo
    fi
    return $RETVAL
}

stop() {
    echo -n "Shutting down $NAME: "
    daemon --user $USER $DAEMON stop &> /dev/null && success || failure
    RETVAL=$?
    [ $RETVAL -eq 0 ] && rm -f $LOCKFILE && rm -f $PIDFILE
    echo
    return $RETVAL
}

case "$1" in
    start)
        start
    ;;
    stop)
        stop
    ;;
    status)
        status -p $PIDFILE $NAME
    ;;
    restart)
        stop
        start
    ;;
    *)
        echo "Usage: $NAME {start|stop|status|restart}"
        exit 1
    ;;
esac
