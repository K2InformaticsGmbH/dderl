%% -*- mode: erlang;erlang-indent-level: 4;indent-tabs-mode: nil -*-
%% ex: ft=erlang ts=4 sw=4 et
[
%% DDerl config
{dderl, [
    {interface, "{{dderl_listener_ip}}"},
    {port, {{dderl_listener_port}}},
    {ssl_opts, []}
]},

%% SSL
{ssl, [{protocol_version,['tlsv1.2','tlsv1.1',tlsv1]}]},

%% IMEM
{imem, [
    {mnesia_node_type, {{imem_node_type}}},
    {mnesia_schema_name, '{{imem_schema_name}}'},
    {erl_cluster_mgrs, {{imem_cluster_mgrs}}},
    {tcp_ip, "{{imem_listener_ip}}"},
    {tcp_port, {{imem_listener_port}}},
    {imem_snapshot_dir, "{{imem_snapshot_dir}}"},
    {node_shard_fun, {{{imem_node_shard_fun}}}}
]},

%% LAGER config
{lager, [
        {handlers, [{lager_console_backend, [{level,info}]},
                    {lager_file_backend, [{file, "{{dderl_log_dir}}/error.log"},
                                          {level, error},
                                          {size, 10485760},
                                          {date, "$D0"},
                                          {count, 5}{{{ lager_file_backend_config }}}]},
                    {lager_file_backend, [{file, "{{dderl_log_dir}}/console.log"},
                                          {level, info},
                                          {size, 10485760},
                                          {date, "$D0"},
                                          {count, 5}{{{ lager_file_backend_config }}}]},
                    {imem_lager_backend, [{level,info},
                                          {table_name_fun, {dderl, log_table}},
                                          {application, dderl},
                                          {tn_event,[{dderl,dderl,dderlLogTable}]}]}{{{ lager_handler }}}
                  ]},
		{extra_sinks,
			[{access_lager_event,
			  [{handlers,
				[{lager_file_backend,
				  [{file, "{{dderl_log_dir}}/dderl_access.log"},
				   {level, info},
				   {size, 10485760},
				   {date, "$D0"},
				   {count, 5},
				   {formatter, dderl_access_logger},
				   {formatter_config, [date, " ", time,";", message, "\n"]}]
				 }]
			   },
			   {async_threshold, 500},
			   {async_threshold_window, 50}]
			 }{{{ lager_sink }}}]},

        %% Whether to write a crash log, and where.
        %% Commented/omitted/undefined means no crash logger.
        {crash_log, "{{dderl_log_dir}}/crash.log"},

        %% Maximum size in bytes of events in the crash log - defaults to 65536
        {crash_log_msg_size, 65536},

        %% Maximum size of the crash log in bytes, before its rotated, set
        %% to 0 to disable rotation - default is 0
        {crash_log_size, 10485760},

        %% What time to rotate the crash log - default is no time
        %% rotation. See the lager README for a description of this format:
        %% https://github.com/basho/lager/blob/master/README.org
        {crash_log_date, "$D0"},

        %% Number of rotated crash logs to keep, 0 means keep only the
        %% current one - default is 0
        {crash_log_count, 5},

        %% Whether to redirect error_logger messages into lager - defaults to true
        {error_logger_redirect, true}
        ]},

{sasl, [
        {sasl_error_logger, false}
    ]},

{os_mon, [
            {start_disksup,false},
            {start_memsup,true},
            {start_cpu_sup,false}
        ]}

].
